#!/usr/bin/perl
# $Id: partnercheck,v 1.1 2011-01-18 19:20:17-08 dmfrank - $
use strict;
use warnings;
$0 =~ s|.*/||;

my $usage = <<__END__;
#
# NAME
#    partnercheck - check for formatting on PARTNER file
#
# SYNOPSIS
#    partnercheck [directory...]
#
# DESCRIPTION
#    Reads PARTNER files and checks for validity.  If no directories
#    are specified, "." is used as the default.  Otherwise checks each
#    directory/PARTNER file.  PARTNER file must contain a username
#    followed by a newline and nothing else in the file.
#
__END__
$usage =~ s/^#[ ]?//gm;

my @directories = @ARGV ? @ARGV : qw(.);

my $error = 0;
for my $directory (@directories) {
   next if -d $directory;
   print STDERR "$0: $directory: not a directory\n";
   $error = 1;
}
print STDERR $usage and exit 1 if $error;

for my $directory (@directories) {

   my $filename = "$directory/PARTNER";
   unless (open PARTNER, "<$filename") {
      print "$0: $filename: $!\n";
      print "This is NOT an error if this student is working alone.\n";
      print "This IS AN ERROR if working with a partner.\n";
      next;
   }

   my $partner = join "", <PARTNER>;
   close PARTNER;

   unless ($partner =~ s/\n$//) {
      print "$0: $filename: missing \\n at end of file\n";
      print "ERROR: INVALID FILE FORMAT FOR PARTNER FILE\n";
   }

   $partner =~ s/[\x00-\x1F\x7F]/sprintf "^%c", (ord $&) ^ 0x40/ge;
   $partner =~ s/[\x80-\xFF]/sprintf "\\x%02X", ord $&/ge;

   my ($user, $passwd, $uid, $gid, $quota, $comment, $gecos, $home,
       $shell, $expire) = getpwnam $partner;

   unless ($user) {
      print "$0: $filename: no such user:\n";
      print $partner, "\n";
      print "ERROR: INVALID FILE FORMAT FOR PARTNER FILE\n";
      next;
   }

   print "$0: $filename: format OK:\n";
   print "user    = $user\n";
   print "uid     = $uid\n";
   print "gecos   = $gecos\n";
   print "home    = $home\n";
   print "shell   = $shell\n";

}continue {
   print "\n";
}

